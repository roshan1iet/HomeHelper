{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roshan Sadmek\\\\Desktop\\\\HomeHelper-master\\\\HomeHelper-master\\\\homehelperfrontend\\\\src\\\\pages\\\\UserRegistrationForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Form, Button, Container, Row, Col } from 'react-bootstrap';\n// import { useNavigate } from 'react-router-dom';\n// import './WorkerRegistrationForm.css';\n\n// function RegistrationForm() {\n//   const [step, setStep] = useState(1);\n//   const [role, setRole] = useState('');\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     phone: '',\n//     password: '',\n//     city: '',\n//     state: '',\n//     pincode: '',\n//   });\n\n//   const navigate = useNavigate();\n\n//   const handleRoleSelection = (selectedRole) => {\n//     setRole(selectedRole);\n//     if (selectedRole === 'Worker') {\n//       navigate('/worker-register'); // Navigate to Worker Registration\n//     } else {\n//       setStep(2); // Proceed to User Registration\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log({ role, ...formData });\n//     // You can add the logic to handle registration or API calls here\n//   };\n\n//   return (\n//     <Container>\n//       <Row className=\"justify-content-md-center\">\n//         <Col md=\"6\">\n//           <h2>Register</h2>\n//           <br />\n//           {step === 1 && (\n//             <div>\n//               <h3>Register as:</h3>\n//               <Button variant=\"primary\" className=\"me-2\" onClick={() => handleRoleSelection('User')}>\n//                 User\n//               </Button>\n//               <Button variant=\"secondary\" onClick={() => handleRoleSelection('Worker')}>\n//                 Worker\n//               </Button>\n//             </div>\n//           )}\n//           {step === 2 && (\n//             <Form onSubmit={handleSubmit}>\n//               <Form.Group controlId=\"formName\">\n//                 <Form.Label>Name</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Enter your name\"\n//                   name=\"name\"\n//                   value={formData.name}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formEmail\">\n//                 <Form.Label>Email</Form.Label>\n//                 <Form.Control\n//                   type=\"email\"\n//                   placeholder=\"Enter your email\"\n//                   name=\"email\"\n//                   value={formData.email}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formPhone\">\n//                 <Form.Label>Phone</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Enter your phone number\"\n//                   name=\"phone\"\n//                   value={formData.phone}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formPassword\">\n//                 <Form.Label>Password</Form.Label>\n//                 <Form.Control\n//                   type=\"password\"\n//                   placeholder=\"Enter your password\"\n//                   name=\"password\"\n//                   value={formData.password}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formCity\">\n//                 <Form.Label>City</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Enter your city\"\n//                   name=\"city\"\n//                   value={formData.city}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formState\">\n//                 <Form.Label>State</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Enter your state\"\n//                   name=\"state\"\n//                   value={formData.state}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formPincode\">\n//                 <Form.Label>Pincode</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Enter your pincode\"\n//                   name=\"pincode\"\n//                   value={formData.pincode}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Button variant=\"primary\" type=\"submit\">\n//                 Register\n//               </Button>\n//             </Form>\n//           )}\n//         </Col>\n//       </Row>\n//     </Container>\n//   );\n// }\n\n// export default RegistrationForm;\n\nimport React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport './WorkerRegistrationForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationForm() {\n  _s();\n  const [step, setStep] = useState(1);\n  const [role, setRole] = useState('');\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n    city: '',\n    state: '',\n    pincode: ''\n  });\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const handleRoleSelection = selectedRole => {\n    setRole(selectedRole);\n    if (selectedRole === 'Worker') {\n      navigate('/worker-register'); // Navigate to Worker Registration\n    } else {\n      setStep(2); // Proceed to User Registration\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name) newErrors.name = 'Name is required';\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email is invalid';\n    }\n    if (!formData.phone) {\n      newErrors.phone = 'Phone number is required';\n    } else if (!/^\\d{10}$/.test(formData.phone)) {\n      newErrors.phone = 'Phone number must be 10 digits';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    if (!formData.pincode) {\n      newErrors.pincode = 'Pincode is required';\n    } else if (!/^\\d{6}$/.test(formData.pincode)) {\n      newErrors.pincode = 'Pincode must be a 6-digit number';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      console.log({\n        role,\n        ...formData\n      });\n      // Add logic to handle registration (e.g., API call)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Register as:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"me-2\",\n            onClick: () => handleRoleSelection('User'),\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"me-2\",\n            onClick: () => handleRoleSelection('Worker'),\n            children: \"Worker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), step === 2 && /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your name\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleChange,\n              isInvalid: !!errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter your email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              isInvalid: !!errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your phone number\",\n              name: \"phone\",\n              value: formData.phone,\n              onChange: handleChange,\n              isInvalid: !!errors.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Enter your password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleChange,\n              isInvalid: !!errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formCity\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your city\",\n              name: \"city\",\n              value: formData.city,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formState\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your state\",\n              name: \"state\",\n              value: formData.state,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formPincode\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Pincode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your pincode\",\n              name: \"pincode\",\n              value: formData.pincode,\n              onChange: handleChange,\n              isInvalid: !!errors.pincode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.pincode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistrationForm, \"kg5DBsvWnehqbDbmGhLhxDm9csw=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","Form","Button","Container","Row","Col","useNavigate","jsxDEV","_jsxDEV","RegistrationForm","_s","step","setStep","role","setRole","formData","setFormData","name","email","phone","password","city","state","pincode","errors","setErrors","navigate","handleRoleSelection","selectedRole","handleChange","e","value","target","validateForm","newErrors","test","length","Object","keys","handleSubmit","preventDefault","console","log","children","className","md","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","isInvalid","Feedback","_c","$RefreshReg$"],"sources":["C:/Users/Roshan Sadmek/Desktop/HomeHelper-master/HomeHelper-master/homehelperfrontend/src/pages/UserRegistrationForm.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Form, Button, Container, Row, Col } from 'react-bootstrap';\n// import { useNavigate } from 'react-router-dom';\n// import './WorkerRegistrationForm.css';\n\n// function RegistrationForm() {\n//   const [step, setStep] = useState(1);\n//   const [role, setRole] = useState('');\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     phone: '',\n//     password: '',\n//     city: '',\n//     state: '',\n//     pincode: '',\n//   });\n\n//   const navigate = useNavigate();\n\n//   const handleRoleSelection = (selectedRole) => {\n//     setRole(selectedRole);\n//     if (selectedRole === 'Worker') {\n//       navigate('/worker-register'); // Navigate to Worker Registration\n//     } else {\n//       setStep(2); // Proceed to User Registration\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log({ role, ...formData });\n//     // You can add the logic to handle registration or API calls here\n//   };\n\n//   return (\n//     <Container>\n//       <Row className=\"justify-content-md-center\">\n//         <Col md=\"6\">\n//           <h2>Register</h2>\n//           <br />\n//           {step === 1 && (\n//             <div>\n//               <h3>Register as:</h3>\n//               <Button variant=\"primary\" className=\"me-2\" onClick={() => handleRoleSelection('User')}>\n//                 User\n//               </Button>\n//               <Button variant=\"secondary\" onClick={() => handleRoleSelection('Worker')}>\n//                 Worker\n//               </Button>\n//             </div>\n//           )}\n//           {step === 2 && (\n//             <Form onSubmit={handleSubmit}>\n//               <Form.Group controlId=\"formName\">\n//                 <Form.Label>Name</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Enter your name\"\n//                   name=\"name\"\n//                   value={formData.name}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formEmail\">\n//                 <Form.Label>Email</Form.Label>\n//                 <Form.Control\n//                   type=\"email\"\n//                   placeholder=\"Enter your email\"\n//                   name=\"email\"\n//                   value={formData.email}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formPhone\">\n//                 <Form.Label>Phone</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Enter your phone number\"\n//                   name=\"phone\"\n//                   value={formData.phone}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formPassword\">\n//                 <Form.Label>Password</Form.Label>\n//                 <Form.Control\n//                   type=\"password\"\n//                   placeholder=\"Enter your password\"\n//                   name=\"password\"\n//                   value={formData.password}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formCity\">\n//                 <Form.Label>City</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Enter your city\"\n//                   name=\"city\"\n//                   value={formData.city}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formState\">\n//                 <Form.Label>State</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Enter your state\"\n//                   name=\"state\"\n//                   value={formData.state}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formPincode\">\n//                 <Form.Label>Pincode</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Enter your pincode\"\n//                   name=\"pincode\"\n//                   value={formData.pincode}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Button variant=\"primary\" type=\"submit\">\n//                 Register\n//               </Button>\n//             </Form>\n//           )}\n//         </Col>\n//       </Row>\n//     </Container>\n//   );\n// }\n\n// export default RegistrationForm;\n\nimport React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport './WorkerRegistrationForm.css';\n\nfunction RegistrationForm() {\n  const [step, setStep] = useState(1);\n  const [role, setRole] = useState('');\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n    city: '',\n    state: '',\n    pincode: '',\n  });\n\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  const handleRoleSelection = (selectedRole) => {\n    setRole(selectedRole);\n    if (selectedRole === 'Worker') {\n      navigate('/worker-register'); // Navigate to Worker Registration\n    } else {\n      setStep(2); // Proceed to User Registration\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name) newErrors.name = 'Name is required';\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email is invalid';\n    }\n    if (!formData.phone) {\n      newErrors.phone = 'Phone number is required';\n    } else if (!/^\\d{10}$/.test(formData.phone)) {\n      newErrors.phone = 'Phone number must be 10 digits';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    if (!formData.pincode) {\n      newErrors.pincode = 'Pincode is required';\n    } else if (!/^\\d{6}$/.test(formData.pincode)) {\n      newErrors.pincode = 'Pincode must be a 6-digit number';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      console.log({ role, ...formData });\n      // Add logic to handle registration (e.g., API call)\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"6\">\n          <h2>Register</h2>\n          <br />\n          {step === 1 && (\n            <div>\n              <h3>Register as:</h3><br></br>\n              <Button variant=\"primary\" className=\"me-2\" onClick={() => handleRoleSelection('User')}>\n                User\n              </Button><br></br><br></br><br></br>\n              <Button variant=\"primary\" className=\"me-2\" onClick={() => handleRoleSelection('Worker')}>\n                Worker\n              </Button>\n            </div>\n          )}\n          {step === 2 && (\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId=\"formName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                  isInvalid={!!errors.name}\n                />\n                <Form.Control.Feedback type=\"invalid\">{errors.name}</Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"formEmail\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter your email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  isInvalid={!!errors.email}\n                />\n                <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"formPhone\">\n                <Form.Label>Phone</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your phone number\"\n                  name=\"phone\"\n                  value={formData.phone}\n                  onChange={handleChange}\n                  isInvalid={!!errors.phone}\n                />\n                <Form.Control.Feedback type=\"invalid\">{errors.phone}</Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"formPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter your password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  isInvalid={!!errors.password}\n                />\n                <Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"formCity\">\n                <Form.Label>City</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your city\"\n                  name=\"city\"\n                  value={formData.city}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formState\">\n                <Form.Label>State</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your state\"\n                  name=\"state\"\n                  value={formData.state}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formPincode\">\n                <Form.Label>Pincode</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your pincode\"\n                  name=\"pincode\"\n                  value={formData.pincode}\n                  onChange={handleChange}\n                  isInvalid={!!errors.pincode}\n                />\n                <Form.Control.Feedback type=\"invalid\">{errors.pincode}</Form.Control.Feedback>\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Register\n              </Button>\n            </Form>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default RegistrationForm;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACnE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,EAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}